definitions:
  core.Admission:
    properties:
      area:
        type: string
      location:
        type: string
      machine_id:
        type: string
      org:
        type: string
      org_group:
        type: string
      tag:
        items:
          type: string
        type: array
    type: object
  core.Cmd:
    properties:
      containerised:
        description: run command in runtime
        type: boolean
      description:
        description: description of the command
        type: string
      function:
        description: the function in the package to call
        type: string
      input:
        $ref: '#/definitions/data.Input'
        description: the function input information
      key:
        description: the natural key uniquely identifying the command
        type: string
      package:
        description: the package to use
        type: string
      pwd:
        description: the package registry password
        type: string
      user:
        description: the package registry user
        type: string
      verbose:
        description: enables verbose output
        type: boolean
    type: object
  core.NewJobInfo:
    properties:
      fxKey:
        type: string
      fxVersion:
        type: integer
      jobRef:
        type: string
      machineId:
        items:
          type: string
        type: array
    type: object
  core.Registration:
    properties:
      cpus:
        type: integer
      hostname:
        type: string
      machine_id:
        type: string
      os:
        type: string
      platform:
        type: string
      total_memory:
        type: number
      virtual:
        type: boolean
    type: object
  data.File:
    properties:
      content:
        description: the file content
        type: string
      description:
        description: a description of the intended use of this file
        type: string
      name:
        description: the unique reference for the file
        type: string
      path:
        description: path to the file within the Artisan registry
        type: string
    type: object
  data.Input:
    properties:
      file:
        description: reguired by configuration files
        items:
          $ref: '#/definitions/data.File'
        type: array
      key:
        description: required PGP keys
        items:
          $ref: '#/definitions/data.Key'
        type: array
      secret:
        description: required string value secrets
        items:
          $ref: '#/definitions/data.Secret'
        type: array
      var:
        description: required variables
        items:
          $ref: '#/definitions/data.Var'
        type: array
    type: object
  data.Key:
    properties:
      aggregate:
        description: indicates if this key should be aggregated with other keys
        type: boolean
      description:
        description: a description of the intended use of this key
        type: string
      name:
        description: the unique reference for the PGP key
        type: string
      package_group:
        description: the artisan package group used to select the key
        type: string
      package_name:
        description: the artisan package name used to select the key
        type: string
      path:
        description: the path to the key in the Artisan registry
        type: string
      private:
        description: indicates if the referred key is private or public
        type: boolean
      value:
        description: the key content
        type: string
    type: object
  data.Secret:
    properties:
      description:
        description: a description of the intended use or meaning of this secret
        type: string
      name:
        description: the unique reference for the secret
        type: string
      value:
        description: the value of the secret
        type: string
    type: object
  data.Var:
    properties:
      default:
        type: string
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
      value:
        type: string
    type: object
info:
  contact:
    email: onix@gatblau.org
    name: gatblau
    url: http://onix.gatblau.org/
  description: Onix Config Manager Control Service for Pilot Host agent
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Pilot Control
  version: 0.0.4
paths:
  /:
    get:
      description: |-
        Checks that Artie's HTTP server is listening on the required port.
        Use a liveliness probe.
        It does not guarantee the server is ready to accept calls.
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Check that Artie's HTTP API is live
      tags:
      - General
  /admission:
    put:
      description: |-
        inform pilotctl to accept management connections coming from a host pilot agent
        admitting a host also requires associating the relevant logistic information such as org, area and location for the host
      parameters:
      - description: the required admission information
        in: body
        name: command
        required: true
        schema:
          items:
            $ref: '#/definitions/core.Admission'
          type: array
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Admits a host into service
      tags:
      - Admission
  /area/{area}/location:
    get:
      description: Get a list of locations setup in an area
      parameters:
      - description: the unique id for area under which locations are defined
        in: path
        name: area
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Locations in an Area
      tags:
      - Logistics
  /cmd:
    get:
      description: get a list of all command definitions
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all Command definitions
      tags:
      - Command
    put:
      description: creates a new or updates an existing command definition
      parameters:
      - description: the command definition
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/core.Cmd'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create or Update a Command
      tags:
      - Command
  /cmd/{name}:
    get:
      description: get a specific a command definition
      parameters:
      - description: the unique name for the command to retrieve
        in: path
        name: name
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a Command definition
      tags:
      - Command
  /host:
    get:
      description: Returns a list of remote hosts
      parameters:
      - description: the organisation group key to filter the query
        in: query
        name: og
        type: string
      - description: the organisation key to filter the query
        in: query
        name: or
        type: string
      - description: the area key to filter the query
        in: query
        name: ar
        type: string
      - description: the location key to filter the query
        in: query
        name: lo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Hosts
      tags:
      - Host
  /job:
    get:
      description: Returns a list of jobs filtered by the specified logistics tags
      parameters:
      - description: the organisation group key to filter the query
        in: query
        name: og
        type: string
      - description: the organisation key to filter the query
        in: query
        name: or
        type: string
      - description: the area key to filter the query
        in: query
        name: ar
        type: string
      - description: the location key to filter the query
        in: query
        name: lo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Jobs
      tags:
      - Job
    post:
      description: create a new job for execution on one or more remote hosts
      parameters:
      - description: the information required to create a new job
        in: body
        name: command
        required: true
        schema:
          $ref: '#/definitions/core.NewJobInfo'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a Job
      tags:
      - Job
  /org-group:
    get:
      description: Get a list of organisation groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Organisation Groups
      tags:
      - Logistics
  /org-group/{org-group}/area:
    get:
      description: Get a list of areas setup in an organisation group
      parameters:
      - description: the unique id for organisation group under which areas are defined
        in: path
        name: org-group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Areas in Organisation Group
      tags:
      - Logistics
  /org-group/{org-group}/org:
    get:
      description: Get a list of organisations setup in an organisation group
      parameters:
      - description: the unique id for organisation group under which organisations
          are defined
        in: path
        name: org-group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Organisations in Organisation Group
      tags:
      - Logistics
  /package:
    get:
      description: get a list of packages in the backing Artisan registry
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Artisan Packages
      tags:
      - Registry
  /package/{name}/api:
    get:
      description: get a list of exported functions and inputs for the specified package
      parameters:
      - description: the fully qualified name of the artisan package having the required
          API
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get the API of an Artisan Package
      tags:
      - Registry
  /ping/{machine-id}:
    post:
      description: submits a ping from a host to the control plane
      parameters:
      - description: the machine Id of the host
        in: path
        name: machine-id
        required: true
        type: string
      - description: the result of the execution of the last command or nil if no
          result is available
        in: body
        name: cmd-result
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Ping
      tags:
      - Host
  /register:
    post:
      description: registers a new host and its technical details with the service
      parameters:
      - description: the host registration configuration
        in: body
        name: registration-info
        required: true
        schema:
          $ref: '#/definitions/core.Registration'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register a Host
      tags:
      - Host
swagger: "2.0"
